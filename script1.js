'use strict';

// Task #1
//Объясните почему код даёт именно такие результаты?

//пример 1
// Префиксная форма инкремента увеличивает на единицу 'a' и сразу выводит новое значение 'c'
let a = 1, b = 1, c, d;
c = ++a;
alert(c); // ответ: 2

//пример 2
// Постфиксная форма инкремента сначала выводит старое значение 'b', затем увеличивает его на единицу
d = b++;
alert(d); //ответ: 1

//пример 3
// Приоритет инкремента выше чем другие операции, поэтому сначала 'a' добавит 1, получим а = 3, затем прибавим 2 и получим 5 в "с"
c = 2 + ++a;
alert(c); //ответ: 5

//пример 4
// Приоритет инкремента выше чем другие операции, но в постфиксной форме в 'd' положит прежнее значение b = 2 (в само b уже запишется 3), прибавит 2, получит d = 4. 'a' и 'b' остаются = 3.
d = 2 + b++;
alert(d); //ответ: 4
alert(a); //3
alert(b); //3


// Task #2
/* Чему будут равны переменные x и a в примере ниже? Написать почему так произошло
(описать последовательность действий).

Приоритет инкремента выше чем другие операции, но в постфиксной форме в "x1" запишется a1 = 2 * 2 и прибавит 1, получится 5. В "а1" запишется a1 = 2 * 2 = 4. */
let a1 = 2;
let x1 = 1 + (a1 *= 2);
console.log(x1, a1);


// Task #3
/* Объявить две переменные a и b и задать им целочисленные произвольные начальные
значения.
Затем написать скрипт, который работает по следующему принципу:
- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
- если а и b отрицательные, вывести их произведение;
- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
*/

let a2 = Math.round(Math.random() * (10 - (-10) - (-10)));
let b2 = Math.round(Math.random() * (10 - (-10) - (-10)));
let res = 0;
if (a2 >= 0 && b2 >= 0) {
    console.log(res = a2 - b2);
}
else if ((a2 >= 0 && b2 < 0) || (a2 < 0 && b2 >= 0)) {
    console.log(res = a2 + b2);
}
else {
    console.log(res = a2 * b2);
}


// Task #4
/* Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя
параметрами. Т.е. например, функция для сложения должна принимать два числа, складывать их
и возвращать результат.
Обязательно использовать оператор return. 
*/

let summ = (a,b) => console.log(a + b);
let subsr = (a,b) => console.log(a - b);
let multi = (a,b) => console.log(a * b);
let div = (a,b) => {
    if (b < 0) {
        return alert('На ноль делить нельзя');
    }
    return console.log(a / b);
}

summ(2,3);
subsr(8,6);
multi (6,2);
div(9,3);

// Task #5
/* Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от переданного значения операции (использовать switch) выполнить одну из арифметических операций (использовать функции из задания 4) и вернуть полученное значение. */

function mathOperation(arg1, arg2, operation) {
    switch (operation) {
        case 'summ' : summ(arg1, arg2);
        case 'substr' : subsr(arg1, arg2);
        case 'multi' : multi(arg1, arg2);
        case 'div' : div(arg1, arg2);
    }
}

mathOperation(8, 4, 'div');